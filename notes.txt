IEX shortcuts:
Ctrl + A - Cursor moved to Starting of the line
Ctrl + K - Characters after cursor position erased
#iex:break - Breaking the IEX runner comment

elixir -h
iex -h
mix help
mix help run

Running and compiling the code in normal terminal using MIX
mix
mix test
mix compile
mix run
mix run -e Dicitonary.hello

Compiling in IEX
c "lib/dictionary.ex"
r Dictionary

Downloading files using curl command:
curl https://coding-gnome.com/courses/e4p2/assets/words.txt >words.txt

Function refresh:
String.split(~r/\n/, trim: true) - Do not put regular expressions in double quotes
File.read! vs File.read

Coding and thinking as transformation of states in functional programming
New field - 
	Module attribute - loaded at compilation time
Example:
 @word_list "assets/words.txt"
        |> File.read!()
        |> String.split(~r/\n/, trim: true) 

Datatypes and corresponding functions:
Usage of Codepoints ?c

Integer - supports different base numbers
	- trunc, round , div
	- String.to_integer, also String.to_integer along with basetype for conversion
Atoms	- starts with : followed by lowercase character, special characters and double quotes
	- starts with Uppercase letters. Example Module name Dictionary internal mapped as ":Elixir.Dictionary" for
          Erlang representation
	- is_atom function
	- evaluting code inside atom. Example: "next-number: #{a+1}"

Boolean - true, false , nil (Falsy)
	- and / or / not (require true or false as part of evalution
	- && / || / !  (truthy values)
	- && / and  - returns the rhs value, if lhs value is true
	- || / or   - returns the rhs value, if lhs value is false
	- Bitwise
Ranges	- a = 1..5 
	- 'in' operator to verify the validation bound  Example: 4 in a
	- for i <- a, do: i * 7
Sigils	- starting with tilte character ~ followed by type
	- ~s[hello]
	- three ways of representation 
		- ~w|...|,~c/.../,~s"...",~S'...'
		- ~C<...>, ~r{...}, (...),[...]
		- multiline support 
			~w"""
			    .....
			  """
	- lowercase sigils supports interpolation, while upper case do not
	- sigils to work with date and time - ~D, ~T, ~N

			

Query:
When to use String.to_integer vs String.parse
What is the purpose of using "use" vs "import" in iex? (Refer the usage of "use Bitwise" in iex boolean section)
How to get the latest value of Time using different variable assignment mechanisms like interpolation, variable assignmentetc?
 
